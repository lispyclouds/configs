server {
  listen 443      ssl http2;
  listen [::]:443 ssl http2;

  listen 8888      ssl http2;
  listen [::]:8888 ssl http2;

  server_name damned.api;

  # block requests from some ip cuz #whynot
  deny 83.136.250.51;

  # Enable sandboxing but with scripts
  # Don't allow inserting pages in frames
  # Don't allow frames and plugins
  # Allow fonts, media, scripts, styles from same site only
  add_header Content-Security-Policy "frame-ancestors 'none'; sandbox allow-scripts; default-src 'self'; frame-src 'none'; object-src 'none'";
  # Only allow my site to frame itself
  add_header X-Frame-Options SAMEORIGIN;
  # Only connect to this site and subdomains via HTTPS for the next two years and also include in the preload list
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
  # Prevent browsers from incorrectly detecting non-scripts as scripts
  add_header X-Content-Type-Options nosniff;
  # Don't send referrer headers
  add_header Referrer-Policy no-referrer;
  # Protect from XSS attacks on older browsers
  add_header X-XSS-Protection "1; mode=block";

  client_max_body_size 100M;

  ssl_certificate     /etc/letsencrypt/live/damned.api/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/damned.api/privkey.pem;

  ssl_protocols             TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_dhparam               /etc/ssl/private/dhparam.pem;
  ssl_ciphers               'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_session_timeout       1d;
  ssl_session_cache         shared:SSL:50m;
  ssl_stapling              on;
  ssl_stapling_verify       off;

  location / {
    proxy_pass       http://localhost:8008;
    proxy_set_header X-Forwarded-For $remote_addr;
  }
}

server  {
  listen 80;
  listen [::]:80;

  server_name damned.api;

  return 301 https://$host$request_uri;
}
